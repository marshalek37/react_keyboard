{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPress","handleKeyup","event","setState","key","window","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,SAAU,IAFd,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,SAAUE,EAAME,OAdpC,uDAKE,WACEC,OAAOC,iBAAiB,QAASC,KAAKN,eAN1C,kCASE,WACEI,OAAOG,oBAAoB,QAASD,KAAKN,eAV7C,oBAiBE,WACE,IAAQD,EAAaO,KAAKR,MAAlBC,SAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIT,EAAQ,mCACwBA,EADxB,KAEJ,kCA1BhB,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6614e4a1.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  keyPress: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    keyPress: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    this.setState({ keyPress: event.key });\n  };\n\n  render() {\n    const { keyPress } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            keyPress\n              ? `The last pressed key is [${keyPress}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}